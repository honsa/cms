{"version":3,"file":"QuickPostWidget.js","mappings":"YAAA,IAAWA,EAAAA,EAwIRC,OArIDC,MAAMC,gBAAkBC,QAAQC,KAAKC,OAAO,CAC1CC,OAAQ,KACRC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAU,KACVC,WAAY,KACZC,SAAS,EAETC,KAAM,SAAUC,EAAUT,EAAQC,EAAYC,GAC5CQ,KAAKV,OAASA,EACdU,KAAKT,WAAaA,EAClBS,KAAKR,SAAWA,EAChBQ,KAAKP,QAAUV,EAAE,UAAYgB,GAE7BC,KAAKC,SAASD,KAAKP,QAAQS,KAAK,gBAGlCD,SAAU,SAAUP,GAClBM,KAAKN,MAAQA,EACbM,KAAKL,SAAWK,KAAKN,MAAMQ,KAAK,uBAEhCF,KAAKT,aAEL,IAAIY,EAAWH,KAAKN,MAAMQ,KAAK,qCAC7BE,EAA6BD,EAC1BE,KAAK,WACLC,KAAKC,WAAWL,KAAK,iBAE1BC,EAASK,UAETR,KAAKS,YAAYT,KAAKN,MAAO,SAAU,oBACvCM,KAAKS,YACHL,EACA,QACA,2BAIJM,iBAAkB,SAAUC,GAC1BA,EAAMC,iBAENZ,KAAKa,KAAKb,KAAKc,OAAOC,KAAKf,QAG7BgB,uBAAwB,WACtBhB,KAAKa,KAAKb,KAAKiB,UAAUF,KAAKf,QAGhCa,KAAM,SAAUK,GAAU,WACxB,IAAIlB,KAAKH,QAAT,CAIAG,KAAKH,SAAU,EACfG,KAAKL,SAASwB,SAAS,WAEvB,IAAIC,EAAWjC,QAAQkC,YAAYrB,KAAKN,OACtCW,EAAOtB,EAAEM,OAAO,CAACiC,QAAS,GAAIF,EAAUpB,KAAKV,QAE/CL,MAAMsC,kBAAkB,OAAQ,qBAAsB,CAAClB,KAAAA,IACpDmB,MAAK,SAACC,GACD,EAAK7B,YACP,EAAKA,WAAW8B,WAAWC,SAG7B1C,MAAM2C,GAAGC,cAAc5C,MAAM6C,EAAE,MAAO,iBACtCZ,EAASO,EAASpB,SAPtB,OASS,YAAgB,IAAdoB,EAAc,EAAdA,SAOP,GANI,EAAK7B,YACP,EAAKA,WAAW8B,WAAWC,SAG7B1C,MAAM2C,GAAGG,aAAa9C,MAAM6C,EAAE,MAAO,yBAEjCL,EAASpB,KAAK2B,OAOhB,IAAK,IAAIC,KANJ,EAAKrC,aACR,EAAKA,WAAab,EAAE,wBAAwBmD,YAC1C,EAAKxC,QAIa+B,EAASpB,KAAK2B,OAClC,GAAKP,EAASpB,KAAK2B,OAAOG,eAAeF,GAIzC,IAAK,IAAIG,EAAI,EAAGA,EAAIX,EAASpB,KAAK2B,OAAOC,GAAWI,OAAQD,IAAK,CAC/D,IAAIE,EAAQb,EAASpB,KAAK2B,OAAOC,GAAWG,GAC5CrD,EAAE,OAASuD,EAAQ,SAASC,SAAS,EAAK3C,gBA9BpD,SAmCW,WACP,EAAKC,SAAU,EACf,EAAKF,SAAS6C,YAAY,gBAIhC1B,OAAQ,SAAUW,GAEhB,IAAIgB,EAAW1D,EAAEiB,KAAKR,UAMtB,GALAQ,KAAKN,MAAMgD,YAAYD,GACvBxD,MAAM0D,eAAeF,GACrBzC,KAAKC,SAASwC,QAG2B,IAA9BxD,MAAM2D,oBACf,IAAK,IAAIR,EAAI,EAAGA,EAAInD,MAAM2D,oBAAoBC,UAAUR,OAAQD,IAAK,CACnE,IAAIU,EAAS7D,MAAM2D,oBAAoBC,UAAUT,GAE9CU,EAAOxD,OAAOyD,WACfD,EAAOxD,OAAOyD,WAAa/C,KAAKV,OAAOyD,WAEvCD,EAAOE,SAAS,CACdC,IAAKxB,EAASyB,UACdC,MAAO1B,EAAS0B,MAChBC,YAAa3B,EAAS2B,YACtBC,SAAU5B,EAAS6B,mBAO7BrC,UAAW,SAAUQ,GAEnBxC,MAAMsE,WAAW9B,EAASyB,c","sources":["webpack:///./QuickPostWidget.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.QuickPostWidget = Garnish.Base.extend({\n    params: null,\n    initFields: null,\n    formHtml: null,\n    $widget: null,\n    $form: null,\n    $saveBtn: null,\n    $errorList: null,\n    loading: false,\n\n    init: function (widgetId, params, initFields, formHtml) {\n      this.params = params;\n      this.initFields = initFields;\n      this.formHtml = formHtml;\n      this.$widget = $('#widget' + widgetId);\n\n      this.initForm(this.$widget.find('form:first'));\n    },\n\n    initForm: function ($form) {\n      this.$form = $form;\n      this.$saveBtn = this.$form.find('button[type=submit]');\n\n      this.initFields();\n\n      var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\n        $saveAndContinueEditingBtn = $menuBtn\n          .data('menubtn')\n          .menu.$container.find('> ul > li > a');\n\n      $menuBtn.menubtn();\n\n      this.addListener(this.$form, 'submit', 'handleFormSubmit');\n      this.addListener(\n        $saveAndContinueEditingBtn,\n        'click',\n        'saveAndContinueEditing'\n      );\n    },\n\n    handleFormSubmit: function (event) {\n      event.preventDefault();\n\n      this.save(this.onSave.bind(this));\n    },\n\n    saveAndContinueEditing: function () {\n      this.save(this.gotoEntry.bind(this));\n    },\n\n    save: function (callback) {\n      if (this.loading) {\n        return;\n      }\n\n      this.loading = true;\n      this.$saveBtn.addClass('loading');\n\n      var formData = Garnish.getPostData(this.$form),\n        data = $.extend({enabled: 1}, formData, this.params);\n\n      Craft.sendActionRequest('POST', 'entries/save-entry', {data})\n        .then((response) => {\n          if (this.$errorList) {\n            this.$errorList.children().remove();\n          }\n\n          Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\n          callback(response.data);\n        })\n        .catch(({response}) => {\n          if (this.$errorList) {\n            this.$errorList.children().remove();\n          }\n\n          Craft.cp.displayError(Craft.t('app', 'Couldn’t save entry.'));\n\n          if (response.data.errors) {\n            if (!this.$errorList) {\n              this.$errorList = $('<ul class=\"errors\"/>').insertAfter(\n                this.$form\n              );\n            }\n\n            for (var attribute in response.data.errors) {\n              if (!response.data.errors.hasOwnProperty(attribute)) {\n                continue;\n              }\n\n              for (var i = 0; i < response.data.errors[attribute].length; i++) {\n                var error = response.data.errors[attribute][i];\n                $('<li>' + error + '</li>').appendTo(this.$errorList);\n              }\n            }\n          }\n        })\n        .finally(() => {\n          this.loading = false;\n          this.$saveBtn.removeClass('loading');\n        });\n    },\n\n    onSave: function (response) {\n      // Reset the widget\n      var $newForm = $(this.formHtml);\n      this.$form.replaceWith($newForm);\n      Craft.initUiElements($newForm);\n      this.initForm($newForm);\n\n      // Are there any Recent Entries widgets to notify?\n      if (typeof Craft.RecentEntriesWidget !== 'undefined') {\n        for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\n          var widget = Craft.RecentEntriesWidget.instances[i];\n          if (\n            !widget.params.sectionId ||\n            widget.params.sectionId == this.params.sectionId\n          ) {\n            widget.addEntry({\n              url: response.cpEditUrl,\n              title: response.title,\n              dateCreated: response.dateCreated,\n              username: response.authorUsername,\n            });\n          }\n        }\n      }\n    },\n\n    gotoEntry: function (response) {\n      // Redirect to the entry’s edit URL\n      Craft.redirectTo(response.cpEditUrl);\n    },\n  });\n})(jQuery);\n"],"names":["$","jQuery","Craft","QuickPostWidget","Garnish","Base","extend","params","initFields","formHtml","$widget","$form","$saveBtn","$errorList","loading","init","widgetId","this","initForm","find","$menuBtn","$saveAndContinueEditingBtn","data","menu","$container","menubtn","addListener","handleFormSubmit","event","preventDefault","save","onSave","bind","saveAndContinueEditing","gotoEntry","callback","addClass","formData","getPostData","enabled","sendActionRequest","then","response","children","remove","cp","displayNotice","t","displayError","errors","attribute","insertAfter","hasOwnProperty","i","length","error","appendTo","removeClass","$newForm","replaceWith","initUiElements","RecentEntriesWidget","instances","widget","sectionId","addEntry","url","cpEditUrl","title","dateCreated","username","authorUsername","redirectTo"],"sourceRoot":""}